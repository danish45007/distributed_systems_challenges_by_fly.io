2024-02-19 00:39:28,147{GMT}	INFO	[jepsen test runner] jepsen.core: Test version a6ecf26472b81b804f34a302bd07c0bb804a8801 (plus uncommitted changes)
2024-02-19 00:39:28,148{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin /Users/danishsharma/go/src/gossip-glamers/single_node_broadcast/bin --node-count 1 --time-limit 20 --rate 10
2024-02-19 00:39:28,224{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16142
         "0x4b48be5c"
         "maelstrom.db$db$reify__16142@4b48be5c"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x1ef6977b" "2024-02-19T00:39:28.044+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x674cd2da"
         "maelstrom.net$jepsen_net$reify__15251@674cd2da"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x686279e0"
         "maelstrom.workload.broadcast$client$reify__16644@686279e0"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x6b28d4e4"
         "java.util.concurrent.CyclicBarrier@6b28d4e4"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x41cfcbb5"
         "jepsen.checker$compose$reify__11881@41cfcbb5"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "/Users/danishsharma/go/src/gossip-glamers/single_node_broadcast/bin"
  "--node-count"
  "1"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@40941b54"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@3b42d7df"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/Users/danishsharma/go/src/gossip-glamers/single_node_broadcast/bin"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x704c3ca2"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@704c3ca2"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x7d3a9061"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@7d3a9061"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 0,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x8d40f07"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@8d40f07"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x196c8b93"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@196c8b93"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x307ca947"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x61d1315b"
         "maelstrom.net$jepsen_os$reify__15254@61d1315b"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-02-19 00:39:30,245{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-02-19 00:39:30,246{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-02-19 00:39:30,247{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-02-19 00:39:30,249{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-02-19 00:39:30,250{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-02-19 00:39:30,251{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /Users/danishsharma/go/src/gossip-glamers/single_node_broadcast/bin []
2024-02-19 00:39:30,754{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-02-19 00:39:30,771{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	0
2024-02-19 00:39:30,773{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:broadcast	0
2024-02-19 00:39:30,790{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-02-19 00:39:30,810{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 0 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message_ids [0], :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:30,870{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:broadcast	1
2024-02-19 00:39:30,872{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:ok	:broadcast	1
2024-02-19 00:39:31,013{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:broadcast	2
2024-02-19 00:39:31,014{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:ok	:broadcast	2
2024-02-19 00:39:31,086{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:broadcast	3
2024-02-19 00:39:31,088{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:ok	:broadcast	3
2024-02-19 00:39:31,272{GMT}	INFO	[jepsen worker 0] jepsen.util: 1	:invoke	:read	nil
2024-02-19 00:39:31,280{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 1 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 4}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 4, :message_ids [0 1 2 3], :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:31,319{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:invoke	:broadcast	4
2024-02-19 00:39:31,320{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:ok	:broadcast	4
2024-02-19 00:39:31,437{GMT}	INFO	[jepsen worker 0] jepsen.util: 2	:invoke	:read	nil
2024-02-19 00:39:31,443{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 2 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message_ids [0 1 2 3 4], :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:31,509{GMT}	INFO	[jepsen worker 0] jepsen.util: 3	:invoke	:read	nil
2024-02-19 00:39:31,514{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 3 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message_ids [0 1 2 3 4], :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:31,661{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:broadcast	5
2024-02-19 00:39:31,662{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:ok	:broadcast	5
2024-02-19 00:39:31,665{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:broadcast	6
2024-02-19 00:39:31,666{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:ok	:broadcast	6
2024-02-19 00:39:31,675{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:broadcast	7
2024-02-19 00:39:31,675{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:ok	:broadcast	7
2024-02-19 00:39:31,758{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:broadcast	8
2024-02-19 00:39:31,759{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:ok	:broadcast	8
2024-02-19 00:39:31,809{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:broadcast	9
2024-02-19 00:39:31,809{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:ok	:broadcast	9
2024-02-19 00:39:31,968{GMT}	INFO	[jepsen worker 0] jepsen.util: 4	:invoke	:read	nil
2024-02-19 00:39:31,977{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 4 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 6}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 6, :message_ids [0 1 2 3 4 5 6 7 8 9], :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:32,068{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	10
2024-02-19 00:39:32,070{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:ok	:broadcast	10
2024-02-19 00:39:32,251{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:read	nil
2024-02-19 00:39:32,258{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 5 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2, :message_ids [0 1 2 3 4 5 6 7 8 9 10], :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:32,421{GMT}	INFO	[jepsen worker 0] jepsen.util: 6	:invoke	:read	nil
2024-02-19 00:39:32,427{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 6 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message_ids [0 1 2 3 4 5 6 7 8 9 10], :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:32,476{GMT}	INFO	[jepsen worker 0] jepsen.util: 7	:invoke	:read	nil
2024-02-19 00:39:32,482{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 7 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1, :message_ids [0 1 2 3 4 5 6 7 8 9 10], :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:32,647{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:broadcast	11
2024-02-19 00:39:32,649{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:ok	:broadcast	11
2024-02-19 00:39:32,844{GMT}	INFO	[jepsen worker 0] jepsen.util: 8	:invoke	:read	nil
2024-02-19 00:39:32,851{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 8 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:32,870{GMT}	INFO	[jepsen worker 0] jepsen.util: 9	:invoke	:read	nil
2024-02-19 00:39:32,876{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 9 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,034{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-02-19 00:39:33,039{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 10 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,076{GMT}	INFO	[jepsen worker 0] jepsen.util: 11	:invoke	:read	nil
2024-02-19 00:39:33,081{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 11 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,120{GMT}	INFO	[jepsen worker 0] jepsen.util: 12	:invoke	:read	nil
2024-02-19 00:39:33,127{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 12 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,296{GMT}	INFO	[jepsen worker 0] jepsen.util: 13	:invoke	:read	nil
2024-02-19 00:39:33,301{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 13 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,301{GMT}	INFO	[jepsen worker 0] jepsen.util: 14	:invoke	:read	nil
2024-02-19 00:39:33,305{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 14 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,432{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:broadcast	12
2024-02-19 00:39:33,433{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:ok	:broadcast	12
2024-02-19 00:39:33,498{GMT}	INFO	[jepsen worker 0] jepsen.util: 15	:invoke	:read	nil
2024-02-19 00:39:33,502{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 15 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,575{GMT}	INFO	[jepsen worker 0] jepsen.util: 16	:invoke	:broadcast	13
2024-02-19 00:39:33,577{GMT}	INFO	[jepsen worker 0] jepsen.util: 16	:ok	:broadcast	13
2024-02-19 00:39:33,653{GMT}	INFO	[jepsen worker 0] jepsen.util: 16	:invoke	:read	nil
2024-02-19 00:39:33,658{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 16 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,853{GMT}	INFO	[jepsen worker 0] jepsen.util: 17	:invoke	:read	nil
2024-02-19 00:39:33,859{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 17 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,964{GMT}	INFO	[jepsen worker 0] jepsen.util: 18	:invoke	:read	nil
2024-02-19 00:39:33,971{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 18 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:33,982{GMT}	INFO	[jepsen worker 0] jepsen.util: 19	:invoke	:read	nil
2024-02-19 00:39:33,988{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 19 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:34,170{GMT}	INFO	[jepsen worker 0] jepsen.util: 20	:invoke	:read	nil
2024-02-19 00:39:34,176{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 20 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:34,216{GMT}	INFO	[jepsen worker 0] jepsen.util: 21	:invoke	:read	nil
2024-02-19 00:39:34,222{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 21 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:34,388{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:broadcast	14
2024-02-19 00:39:34,391{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:ok	:broadcast	14
2024-02-19 00:39:34,434{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:broadcast	15
2024-02-19 00:39:34,436{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:ok	:broadcast	15
2024-02-19 00:39:34,603{GMT}	INFO	[jepsen worker 0] jepsen.util: 22	:invoke	:read	nil
2024-02-19 00:39:34,607{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 22 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 3,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:34,657{GMT}	INFO	[jepsen worker 0] jepsen.util: 23	:invoke	:read	nil
2024-02-19 00:39:34,661{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 23 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:34,838{GMT}	INFO	[jepsen worker 0] jepsen.util: 24	:invoke	:read	nil
2024-02-19 00:39:34,842{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 24 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:34,939{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:invoke	:broadcast	16
2024-02-19 00:39:34,940{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:ok	:broadcast	16
2024-02-19 00:39:35,109{GMT}	INFO	[jepsen worker 0] jepsen.util: 25	:invoke	:read	nil
2024-02-19 00:39:35,115{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 25 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:35,246{GMT}	INFO	[jepsen worker 0] jepsen.util: 26	:invoke	:read	nil
2024-02-19 00:39:35,253{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 26 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:35,376{GMT}	INFO	[jepsen worker 0] jepsen.util: 27	:invoke	:broadcast	17
2024-02-19 00:39:35,377{GMT}	INFO	[jepsen worker 0] jepsen.util: 27	:ok	:broadcast	17
2024-02-19 00:39:35,468{GMT}	INFO	[jepsen worker 0] jepsen.util: 27	:invoke	:read	nil
2024-02-19 00:39:35,475{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 27 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:35,509{GMT}	INFO	[jepsen worker 0] jepsen.util: 28	:invoke	:read	nil
2024-02-19 00:39:35,515{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 28 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:35,680{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:invoke	:broadcast	18
2024-02-19 00:39:35,682{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:ok	:broadcast	18
2024-02-19 00:39:35,753{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:invoke	:broadcast	19
2024-02-19 00:39:35,754{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:ok	:broadcast	19
2024-02-19 00:39:35,916{GMT}	INFO	[jepsen worker 0] jepsen.util: 29	:invoke	:read	nil
2024-02-19 00:39:35,923{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 29 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 3,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:36,078{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:broadcast	20
2024-02-19 00:39:36,079{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:ok	:broadcast	20
2024-02-19 00:39:36,145{GMT}	INFO	[jepsen worker 0] jepsen.util: 30	:invoke	:read	nil
2024-02-19 00:39:36,152{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 30 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:36,322{GMT}	INFO	[jepsen worker 0] jepsen.util: 31	:invoke	:read	nil
2024-02-19 00:39:36,326{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 31 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids [0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:36,352{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:broadcast	21
2024-02-19 00:39:36,353{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:broadcast	21
2024-02-19 00:39:36,484{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:broadcast	22
2024-02-19 00:39:36,486{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:broadcast	22
2024-02-19 00:39:36,492{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:broadcast	23
2024-02-19 00:39:36,493{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:broadcast	23
2024-02-19 00:39:36,495{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:broadcast	24
2024-02-19 00:39:36,495{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:broadcast	24
2024-02-19 00:39:36,685{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:broadcast	25
2024-02-19 00:39:36,686{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:broadcast	25
2024-02-19 00:39:36,875{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:broadcast	26
2024-02-19 00:39:36,877{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:ok	:broadcast	26
2024-02-19 00:39:37,008{GMT}	INFO	[jepsen worker 0] jepsen.util: 32	:invoke	:read	nil
2024-02-19 00:39:37,017{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 32 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 7}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 7,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:37,053{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	27
2024-02-19 00:39:37,054{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:ok	:broadcast	27
2024-02-19 00:39:37,251{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	28
2024-02-19 00:39:37,253{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:ok	:broadcast	28
2024-02-19 00:39:37,303{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	29
2024-02-19 00:39:37,304{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:ok	:broadcast	29
2024-02-19 00:39:37,377{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	30
2024-02-19 00:39:37,379{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:ok	:broadcast	30
2024-02-19 00:39:37,500{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	31
2024-02-19 00:39:37,501{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:ok	:broadcast	31
2024-02-19 00:39:37,529{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	32
2024-02-19 00:39:37,530{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:ok	:broadcast	32
2024-02-19 00:39:37,622{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	33
2024-02-19 00:39:37,623{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:ok	:broadcast	33
2024-02-19 00:39:37,652{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:broadcast	34
2024-02-19 00:39:37,652{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:ok	:broadcast	34
2024-02-19 00:39:37,667{GMT}	INFO	[jepsen worker 0] jepsen.util: 33	:invoke	:read	nil
2024-02-19 00:39:37,679{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 33 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 9}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 9,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:37,753{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:broadcast	35
2024-02-19 00:39:37,754{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:ok	:broadcast	35
2024-02-19 00:39:37,836{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:broadcast	36
2024-02-19 00:39:37,837{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:ok	:broadcast	36
2024-02-19 00:39:37,984{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:broadcast	37
2024-02-19 00:39:38,014{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:ok	:broadcast	37
2024-02-19 00:39:38,158{GMT}	INFO	[jepsen worker 0] jepsen.util: 34	:invoke	:read	nil
2024-02-19 00:39:38,170{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 34 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 4}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 4,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:38,276{GMT}	INFO	[jepsen worker 0] jepsen.util: 35	:invoke	:read	nil
2024-02-19 00:39:38,287{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 35 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:38,337{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:broadcast	38
2024-02-19 00:39:38,339{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:ok	:broadcast	38
2024-02-19 00:39:38,451{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:broadcast	39
2024-02-19 00:39:38,452{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:ok	:broadcast	39
2024-02-19 00:39:38,587{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:broadcast	40
2024-02-19 00:39:38,588{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:ok	:broadcast	40
2024-02-19 00:39:38,686{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:broadcast	41
2024-02-19 00:39:38,687{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:ok	:broadcast	41
2024-02-19 00:39:38,817{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:broadcast	42
2024-02-19 00:39:38,818{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:ok	:broadcast	42
2024-02-19 00:39:39,012{GMT}	INFO	[jepsen worker 0] jepsen.util: 36	:invoke	:read	nil
2024-02-19 00:39:39,022{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 36 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 6}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 6,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:39,109{GMT}	INFO	[jepsen worker 0] jepsen.util: 37	:invoke	:read	nil
2024-02-19 00:39:39,120{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 37 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:39,280{GMT}	INFO	[jepsen worker 0] jepsen.util: 38	:invoke	:read	nil
2024-02-19 00:39:39,290{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 38 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:39,292{GMT}	INFO	[jepsen worker 0] jepsen.util: 39	:invoke	:read	nil
2024-02-19 00:39:39,302{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 39 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:39,493{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:invoke	:broadcast	43
2024-02-19 00:39:39,494{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:ok	:broadcast	43
2024-02-19 00:39:39,621{GMT}	INFO	[jepsen worker 0] jepsen.util: 40	:invoke	:read	nil
2024-02-19 00:39:39,628{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 40 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:39,767{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:broadcast	44
2024-02-19 00:39:39,768{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:ok	:broadcast	44
2024-02-19 00:39:39,878{GMT}	INFO	[jepsen worker 0] jepsen.util: 41	:invoke	:read	nil
2024-02-19 00:39:39,886{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 41 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:40,043{GMT}	INFO	[jepsen worker 0] jepsen.util: 42	:invoke	:broadcast	45
2024-02-19 00:39:40,044{GMT}	INFO	[jepsen worker 0] jepsen.util: 42	:ok	:broadcast	45
2024-02-19 00:39:40,219{GMT}	INFO	[jepsen worker 0] jepsen.util: 42	:invoke	:read	nil
2024-02-19 00:39:40,230{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 42 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:40,413{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:invoke	:broadcast	46
2024-02-19 00:39:40,415{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:ok	:broadcast	46
2024-02-19 00:39:40,468{GMT}	INFO	[jepsen worker 0] jepsen.util: 43	:invoke	:read	nil
2024-02-19 00:39:40,483{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 43 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:40,501{GMT}	INFO	[jepsen worker 0] jepsen.util: 44	:invoke	:read	nil
2024-02-19 00:39:40,512{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 44 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:40,558{GMT}	INFO	[jepsen worker 0] jepsen.util: 45	:invoke	:read	nil
2024-02-19 00:39:40,567{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 45 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:40,737{GMT}	INFO	[jepsen worker 0] jepsen.util: 46	:invoke	:read	nil
2024-02-19 00:39:40,749{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 46 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:40,793{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:invoke	:broadcast	47
2024-02-19 00:39:40,794{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:ok	:broadcast	47
2024-02-19 00:39:40,913{GMT}	INFO	[jepsen worker 0] jepsen.util: 47	:invoke	:read	nil
2024-02-19 00:39:40,926{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 47 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:40,996{GMT}	INFO	[jepsen worker 0] jepsen.util: 48	:invoke	:read	nil
2024-02-19 00:39:41,006{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 48 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:41,201{GMT}	INFO	[jepsen worker 0] jepsen.util: 49	:invoke	:read	nil
2024-02-19 00:39:41,208{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 49 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:41,235{GMT}	INFO	[jepsen worker 0] jepsen.util: 50	:invoke	:read	nil
2024-02-19 00:39:41,243{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 50 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:41,364{GMT}	INFO	[jepsen worker 0] jepsen.util: 51	:invoke	:read	nil
2024-02-19 00:39:41,371{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 51 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:41,493{GMT}	INFO	[jepsen worker 0] jepsen.util: 52	:invoke	:broadcast	48
2024-02-19 00:39:41,494{GMT}	INFO	[jepsen worker 0] jepsen.util: 52	:ok	:broadcast	48
2024-02-19 00:39:41,585{GMT}	INFO	[jepsen worker 0] jepsen.util: 52	:invoke	:read	nil
2024-02-19 00:39:41,596{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 52 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:41,652{GMT}	INFO	[jepsen worker 0] jepsen.util: 53	:invoke	:read	nil
2024-02-19 00:39:41,660{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 53 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:41,821{GMT}	INFO	[jepsen worker 0] jepsen.util: 54	:invoke	:read	nil
2024-02-19 00:39:41,834{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 54 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:41,936{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:invoke	:broadcast	49
2024-02-19 00:39:41,937{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:ok	:broadcast	49
2024-02-19 00:39:42,120{GMT}	INFO	[jepsen worker 0] jepsen.util: 55	:invoke	:read	nil
2024-02-19 00:39:42,127{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 55 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:42,267{GMT}	INFO	[jepsen worker 0] jepsen.util: 56	:invoke	:read	nil
2024-02-19 00:39:42,275{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 56 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:42,447{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:invoke	:broadcast	50
2024-02-19 00:39:42,448{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:ok	:broadcast	50
2024-02-19 00:39:42,489{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:invoke	:broadcast	51
2024-02-19 00:39:42,490{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:ok	:broadcast	51
2024-02-19 00:39:42,553{GMT}	INFO	[jepsen worker 0] jepsen.util: 57	:invoke	:read	nil
2024-02-19 00:39:42,561{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 57 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 3,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:42,750{GMT}	INFO	[jepsen worker 0] jepsen.util: 58	:invoke	:read	nil
2024-02-19 00:39:42,758{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 58 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:42,915{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:invoke	:broadcast	52
2024-02-19 00:39:42,917{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:ok	:broadcast	52
2024-02-19 00:39:42,939{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:invoke	:broadcast	53
2024-02-19 00:39:42,940{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:ok	:broadcast	53
2024-02-19 00:39:42,943{GMT}	INFO	[jepsen worker 0] jepsen.util: 59	:invoke	:read	nil
2024-02-19 00:39:42,952{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 59 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 3,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:43,088{GMT}	INFO	[jepsen worker 0] jepsen.util: 60	:invoke	:read	nil
2024-02-19 00:39:43,093{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 60 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:43,115{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:broadcast	54
2024-02-19 00:39:43,116{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:ok	:broadcast	54
2024-02-19 00:39:43,246{GMT}	INFO	[jepsen worker 0] jepsen.util: 61	:invoke	:read	nil
2024-02-19 00:39:43,253{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 61 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:43,309{GMT}	INFO	[jepsen worker 0] jepsen.util: 62	:invoke	:read	nil
2024-02-19 00:39:43,315{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 62 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:43,347{GMT}	INFO	[jepsen worker 0] jepsen.util: 63	:invoke	:read	nil
2024-02-19 00:39:43,354{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 63 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:43,505{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:invoke	:broadcast	55
2024-02-19 00:39:43,506{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:ok	:broadcast	55
2024-02-19 00:39:43,536{GMT}	INFO	[jepsen worker 0] jepsen.util: 64	:invoke	:read	nil
2024-02-19 00:39:43,543{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 64 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:43,703{GMT}	INFO	[jepsen worker 0] jepsen.util: 65	:invoke	:read	nil
2024-02-19 00:39:43,711{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 65 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:43,853{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:broadcast	56
2024-02-19 00:39:43,854{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:ok	:broadcast	56
2024-02-19 00:39:43,986{GMT}	INFO	[jepsen worker 0] jepsen.util: 66	:invoke	:read	nil
2024-02-19 00:39:43,994{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 66 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:44,124{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:broadcast	57
2024-02-19 00:39:44,125{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:ok	:broadcast	57
2024-02-19 00:39:44,280{GMT}	INFO	[jepsen worker 0] jepsen.util: 67	:invoke	:read	nil
2024-02-19 00:39:44,289{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 67 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:44,455{GMT}	INFO	[jepsen worker 0] jepsen.util: 68	:invoke	:read	nil
2024-02-19 00:39:44,463{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 68 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:44,490{GMT}	INFO	[jepsen worker 0] jepsen.util: 69	:invoke	:read	nil
2024-02-19 00:39:44,498{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 69 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:44,534{GMT}	INFO	[jepsen worker 0] jepsen.util: 70	:invoke	:read	nil
2024-02-19 00:39:44,542{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 70 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:44,730{GMT}	INFO	[jepsen worker 0] jepsen.util: 71	:invoke	:read	nil
2024-02-19 00:39:44,739{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 71 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:44,853{GMT}	INFO	[jepsen worker 0] jepsen.util: 72	:invoke	:broadcast	58
2024-02-19 00:39:44,854{GMT}	INFO	[jepsen worker 0] jepsen.util: 72	:ok	:broadcast	58
2024-02-19 00:39:44,956{GMT}	INFO	[jepsen worker 0] jepsen.util: 72	:invoke	:broadcast	59
2024-02-19 00:39:44,956{GMT}	INFO	[jepsen worker 0] jepsen.util: 72	:ok	:broadcast	59
2024-02-19 00:39:44,963{GMT}	INFO	[jepsen worker 0] jepsen.util: 72	:invoke	:read	nil
2024-02-19 00:39:44,972{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 72 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 3,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:45,124{GMT}	INFO	[jepsen worker 0] jepsen.util: 73	:invoke	:broadcast	60
2024-02-19 00:39:45,125{GMT}	INFO	[jepsen worker 0] jepsen.util: 73	:ok	:broadcast	60
2024-02-19 00:39:45,279{GMT}	INFO	[jepsen worker 0] jepsen.util: 73	:invoke	:read	nil
2024-02-19 00:39:45,287{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 73 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:45,401{GMT}	INFO	[jepsen worker 0] jepsen.util: 74	:invoke	:read	nil
2024-02-19 00:39:45,409{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 74 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:45,519{GMT}	INFO	[jepsen worker 0] jepsen.util: 75	:invoke	:read	nil
2024-02-19 00:39:45,527{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 75 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:45,629{GMT}	INFO	[jepsen worker 0] jepsen.util: 76	:invoke	:read	nil
2024-02-19 00:39:45,637{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 76 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:45,784{GMT}	INFO	[jepsen worker 0] jepsen.util: 77	:invoke	:broadcast	61
2024-02-19 00:39:45,785{GMT}	INFO	[jepsen worker 0] jepsen.util: 77	:ok	:broadcast	61
2024-02-19 00:39:45,828{GMT}	INFO	[jepsen worker 0] jepsen.util: 77	:invoke	:read	nil
2024-02-19 00:39:45,839{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 77 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:45,892{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:invoke	:broadcast	62
2024-02-19 00:39:45,893{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:ok	:broadcast	62
2024-02-19 00:39:45,929{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:invoke	:broadcast	63
2024-02-19 00:39:45,930{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:ok	:broadcast	63
2024-02-19 00:39:46,040{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:invoke	:broadcast	64
2024-02-19 00:39:46,041{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:ok	:broadcast	64
2024-02-19 00:39:46,077{GMT}	INFO	[jepsen worker 0] jepsen.util: 78	:invoke	:read	nil
2024-02-19 00:39:46,088{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 78 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 4}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 4,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:46,091{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:invoke	:broadcast	65
2024-02-19 00:39:46,092{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:ok	:broadcast	65
2024-02-19 00:39:46,280{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:invoke	:broadcast	66
2024-02-19 00:39:46,281{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:ok	:broadcast	66
2024-02-19 00:39:46,342{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:invoke	:broadcast	67
2024-02-19 00:39:46,342{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:ok	:broadcast	67
2024-02-19 00:39:46,469{GMT}	INFO	[jepsen worker 0] jepsen.util: 79	:invoke	:read	nil
2024-02-19 00:39:46,479{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 79 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 4}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 4,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:46,553{GMT}	INFO	[jepsen worker 0] jepsen.util: 80	:invoke	:read	nil
2024-02-19 00:39:46,563{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 80 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:46,656{GMT}	INFO	[jepsen worker 0] jepsen.util: 81	:invoke	:broadcast	68
2024-02-19 00:39:46,658{GMT}	INFO	[jepsen worker 0] jepsen.util: 81	:ok	:broadcast	68
2024-02-19 00:39:46,806{GMT}	INFO	[jepsen worker 0] jepsen.util: 81	:invoke	:read	nil
2024-02-19 00:39:46,815{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 81 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:46,828{GMT}	INFO	[jepsen worker 0] jepsen.util: 82	:invoke	:read	nil
2024-02-19 00:39:46,839{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 82 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:46,899{GMT}	INFO	[jepsen worker 0] jepsen.util: 83	:invoke	:read	nil
2024-02-19 00:39:46,909{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 83 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:47,009{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:broadcast	69
2024-02-19 00:39:47,010{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:ok	:broadcast	69
2024-02-19 00:39:47,088{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:broadcast	70
2024-02-19 00:39:47,089{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:ok	:broadcast	70
2024-02-19 00:39:47,269{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:broadcast	71
2024-02-19 00:39:47,270{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:ok	:broadcast	71
2024-02-19 00:39:47,460{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:broadcast	72
2024-02-19 00:39:47,461{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:ok	:broadcast	72
2024-02-19 00:39:47,493{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:broadcast	73
2024-02-19 00:39:47,493{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:ok	:broadcast	73
2024-02-19 00:39:47,540{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:broadcast	74
2024-02-19 00:39:47,541{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:ok	:broadcast	74
2024-02-19 00:39:47,654{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:broadcast	75
2024-02-19 00:39:47,655{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:ok	:broadcast	75
2024-02-19 00:39:47,809{GMT}	INFO	[jepsen worker 0] jepsen.util: 84	:invoke	:read	nil
2024-02-19 00:39:47,820{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 84 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 8}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 8,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:47,934{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:invoke	:broadcast	76
2024-02-19 00:39:47,935{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:ok	:broadcast	76
2024-02-19 00:39:48,113{GMT}	INFO	[jepsen worker 0] jepsen.util: 85	:invoke	:read	nil
2024-02-19 00:39:48,119{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 85 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:48,175{GMT}	INFO	[jepsen worker 0] jepsen.util: 86	:invoke	:read	nil
2024-02-19 00:39:48,183{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 86 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:48,342{GMT}	INFO	[jepsen worker 0] jepsen.util: 87	:invoke	:read	nil
2024-02-19 00:39:48,352{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 87 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:48,435{GMT}	INFO	[jepsen worker 0] jepsen.util: 88	:invoke	:read	nil
2024-02-19 00:39:48,445{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 88 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:48,501{GMT}	INFO	[jepsen worker 0] jepsen.util: 89	:invoke	:read	nil
2024-02-19 00:39:48,511{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 89 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:48,669{GMT}	INFO	[jepsen worker 0] jepsen.util: 90	:invoke	:broadcast	77
2024-02-19 00:39:48,670{GMT}	INFO	[jepsen worker 0] jepsen.util: 90	:ok	:broadcast	77
2024-02-19 00:39:48,793{GMT}	INFO	[jepsen worker 0] jepsen.util: 90	:invoke	:read	nil
2024-02-19 00:39:48,803{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 90 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:48,977{GMT}	INFO	[jepsen worker 0] jepsen.util: 91	:invoke	:broadcast	78
2024-02-19 00:39:48,978{GMT}	INFO	[jepsen worker 0] jepsen.util: 91	:ok	:broadcast	78
2024-02-19 00:39:48,990{GMT}	INFO	[jepsen worker 0] jepsen.util: 91	:invoke	:broadcast	79
2024-02-19 00:39:48,991{GMT}	INFO	[jepsen worker 0] jepsen.util: 91	:ok	:broadcast	79
2024-02-19 00:39:49,141{GMT}	INFO	[jepsen worker 0] jepsen.util: 91	:invoke	:read	nil
2024-02-19 00:39:49,150{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 91 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 3}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 3,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77
  78
  79],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:49,286{GMT}	INFO	[jepsen worker 0] jepsen.util: 92	:invoke	:read	nil
2024-02-19 00:39:49,295{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 92 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77
  78
  79],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:49,417{GMT}	INFO	[jepsen worker 0] jepsen.util: 93	:invoke	:read	nil
2024-02-19 00:39:49,427{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 93 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77
  78
  79],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:49,459{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:invoke	:broadcast	80
2024-02-19 00:39:49,460{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:ok	:broadcast	80
2024-02-19 00:39:49,620{GMT}	INFO	[jepsen worker 0] jepsen.util: 94	:invoke	:read	nil
2024-02-19 00:39:49,630{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 94 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77
  78
  79
  80],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:49,734{GMT}	INFO	[jepsen worker 0] jepsen.util: 95	:invoke	:broadcast	81
2024-02-19 00:39:49,735{GMT}	INFO	[jepsen worker 0] jepsen.util: 95	:ok	:broadcast	81
2024-02-19 00:39:49,736{GMT}	INFO	[jepsen worker 0] jepsen.util: 95	:invoke	:read	nil
2024-02-19 00:39:49,746{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 95 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 2}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 2,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77
  78
  79
  80
  81],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:49,869{GMT}	INFO	[jepsen worker 0] jepsen.util: 96	:invoke	:read	nil
2024-02-19 00:39:49,876{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 96 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77
  78
  79
  80
  81],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:50,022{GMT}	INFO	[jepsen worker 0] jepsen.util: 97	:invoke	:read	nil
2024-02-19 00:39:50,031{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 97 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77
  78
  79
  80
  81],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:50,217{GMT}	INFO	[jepsen worker 0] jepsen.util: 98	:invoke	:read	nil
2024-02-19 00:39:50,224{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 98 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 1}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 1,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77
  78
  79
  80
  81],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:50,368{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:invoke	:broadcast	82
2024-02-19 00:39:50,369{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:ok	:broadcast	82
2024-02-19 00:39:50,385{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:invoke	:broadcast	83
2024-02-19 00:39:50,386{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:ok	:broadcast	83
2024-02-19 00:39:50,532{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:invoke	:broadcast	84
2024-02-19 00:39:50,533{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:ok	:broadcast	84
2024-02-19 00:39:50,555{GMT}	INFO	[jepsen worker 0] jepsen.util: 99	:invoke	:read	nil
2024-02-19 00:39:50,566{GMT}	WARN	[jepsen worker 0] jepsen.generator.interpreter: Process 99 crashed
clojure.lang.ExceptionInfo: Malformed RPC response. Maelstrom sent node n0 the following request:

{:type "read", :msg_id 4}

And expected a response of the form:

{:type (eq "read_ok"),
 :messages [Any],
 {:k :msg_id} Int,
 :in_reply_to Int}

... but instead received

{:in_reply_to 4,
 :message_ids
 [0
  1
  2
  3
  4
  5
  6
  7
  8
  9
  10
  11
  12
  13
  14
  15
  16
  17
  18
  19
  20
  21
  22
  23
  24
  25
  26
  27
  28
  29
  30
  31
  32
  33
  34
  35
  36
  37
  38
  39
  40
  41
  42
  43
  44
  45
  46
  47
  48
  49
  50
  51
  52
  53
  54
  55
  56
  57
  58
  59
  60
  61
  62
  63
  64
  65
  66
  67
  68
  69
  70
  71
  72
  73
  74
  75
  76
  77
  78
  79
  80
  81
  82
  83
  84],
 :type "read_ok"}

This is malformed because:

{:messages missing-required-key, :message_ids disallowed-key}

See doc/protocol.md for more guidance.
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.client$check_body.invokeStatic(client.clj:188)
	at maelstrom.client$check_body.invoke(client.clj:181)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$fn__16576$read__16577.invoke(broadcast.clj:34)
	at maelstrom.workload.broadcast$client$reify__16644.invoke_BANG_(broadcast.clj:207)
	at jepsen.client.Validate.invoke_BANG_(client.clj:83)
	at jepsen.generator.interpreter.ClientWorker.invoke_BANG_(interpreter.clj:65)
	at jepsen.generator.interpreter$spawn_worker$fn__12908$fn__12909.invoke(interpreter.clj:140)
	at jepsen.generator.interpreter$spawn_worker$fn__12908.invoke(interpreter.clj:123)
	at clojure.core$binding_conveyor_fn$fn__5823.invoke(core.clj:2047)
	at clojure.lang.AFn.call(AFn.java:18)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2024-02-19 00:39:50,695{GMT}	INFO	[jepsen worker 0] jepsen.util: 100	:invoke	:broadcast	85
2024-02-19 00:39:50,696{GMT}	INFO	[jepsen worker 0] jepsen.util: 100	:ok	:broadcast	85
2024-02-19 00:39:50,764{GMT}	INFO	[jepsen worker 0] jepsen.util: 100	:invoke	:broadcast	86
2024-02-19 00:39:50,765{GMT}	INFO	[jepsen worker 0] jepsen.util: 100	:ok	:broadcast	86
2024-02-19 00:39:50,765{GMT}	INFO	[jepsen worker nemesis] jepsen.generator.interpreter: Waiting for recovery...
2024-02-19 00:39:52,069{GMT}	INFO	[Jepsen shutdown hook] jepsen.core: Downloading DB logs before JVM shutdown...
