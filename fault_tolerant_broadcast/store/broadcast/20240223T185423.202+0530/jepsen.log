2024-02-23 18:54:23,395{GMT}	INFO	[jepsen test runner] jepsen.core: Test version a6ecf26472b81b804f34a302bd07c0bb804a8801 (plus uncommitted changes)
2024-02-23 18:54:23,396{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin /Users/danishsharma/go/src/gossip-glamers/fault_tolerant_broadcast/bin --node-count 5 --time-limit 20 --rate 10 --nemesis partition
2024-02-23 18:54:23,489{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 5
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x36573ec5"
         "maelstrom.db$db$reify__16142@36573ec5"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x686279e0" "2024-02-23T18:54:23.202+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x6b28d4e4"
         "maelstrom.net$jepsen_net$reify__15251@6b28d4e4"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x41cfcbb5"
         "maelstrom.workload.broadcast$client$reify__16644@41cfcbb5"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x40941b54"
         "java.util.concurrent.CyclicBarrier@40941b54"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x3b42d7df"
         "jepsen.checker$compose$reify__11881@3b42d7df"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "/Users/danishsharma/go/src/gossip-glamers/fault_tolerant_broadcast/bin"
  "--node-count"
  "5"
  "--time-limit"
  "20"
  "--rate"
  "10"
  "--nemesis"
  "partition")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@1660bba7"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@29cd48bd"]})
 :nodes ["n0" "n1" "n2" "n3" "n4"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/Users/danishsharma/go/src/gossip-glamers/fault_tolerant_broadcast/bin"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x2a2f7a61"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@2a2f7a61"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 20000000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.FlipFlop
                                        {:gens [#object[jepsen.nemesis.combined$partition_package$start__16420
                                                        "0x8d40f07"
                                                        "jepsen.nemesis.combined$partition_package$start__16420@8d40f07"]
                                                ({:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 {:type :info,
                                                  :f :stop-partition,
                                                  :value nil}
                                                 ...)],
                                         :i 0})})})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x307ca947"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@307ca947"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 0,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x61d1315b"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@61d1315b"],
           :gen ({:type :info, :f :stop-partition, :value nil})})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x49d5b651"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@49d5b651"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x34989ceb"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x61fb3dae"
         "maelstrom.net$jepsen_os$reify__15254@61fb3dae"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-02-23 18:54:25,295{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-02-23 18:54:25,296{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-02-23 18:54:25,298{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-02-23 18:54:25,299{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-02-23 18:54:25,299{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-02-23 18:54:25,299{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-02-23 18:54:25,299{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-02-23 18:54:25,300{GMT}	INFO	[jepsen node n1] maelstrom.process: launching /Users/danishsharma/go/src/gossip-glamers/fault_tolerant_broadcast/bin []
2024-02-23 18:54:25,300{GMT}	INFO	[jepsen node n3] maelstrom.process: launching /Users/danishsharma/go/src/gossip-glamers/fault_tolerant_broadcast/bin []
2024-02-23 18:54:25,300{GMT}	INFO	[jepsen node n4] maelstrom.process: launching /Users/danishsharma/go/src/gossip-glamers/fault_tolerant_broadcast/bin []
2024-02-23 18:54:25,300{GMT}	INFO	[jepsen node n2] maelstrom.process: launching /Users/danishsharma/go/src/gossip-glamers/fault_tolerant_broadcast/bin []
2024-02-23 18:54:25,301{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-02-23 18:54:25,303{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-02-23 18:54:25,304{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /Users/danishsharma/go/src/gossip-glamers/fault_tolerant_broadcast/bin []
2024-02-23 18:54:26,330{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-02-23 18:54:26,333{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
java.io.IOException: Cannot run program "/Users/danishsharma/go/src/gossip-glamers/fault_tolerant_broadcast/bin" (in directory "/var/folders/yf/p8qjcycs0x9bylbny6gd05v40000gn/T"): error=2, No such file or directory
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1170)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1089)
	at maelstrom.process$start_node_BANG_.invokeStatic(process.clj:199)
	at maelstrom.process$start_node_BANG_.invoke(process.clj:168)
	at maelstrom.db$db$reify__16142.setup_BANG_(db.clj:34)
	at jepsen.db$fn__8729$G__8723__8733.invoke(db.clj:12)
	at jepsen.db$fn__8729$G__8722__8738.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.base/java.lang.ProcessImpl.forkAndExec(Native Method)
	at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:295)
	at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:225)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1126)
	... 31 common frames omitted
